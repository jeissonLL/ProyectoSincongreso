-- MySQL Script generated by MySQL Workbench
-- 06/30/17 15:21:44
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbCongresoceat
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbCongresoceat
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbCongresoceat` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `dbCongresoceat` ;

-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_persona` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_persona` (
  `id_tipo_persona_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_persona` VARCHAR(45) NULL,
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_persona_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_alimentacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_alimentacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_alimentacion` (
  `id_tipo_alimentacion_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tipo de alimentación',
  `nombre_tipo_alimentacion` VARCHAR(50) NULL COMMENT 'Nombre del tipo de alimentación, puede ser vegetariana, vegana, habitual, etc.',
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_alimentacion_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_identificacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_identificacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_identificacion` (
  `id_tipo_identificacion_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tipo de identificación que será usado por cada usuario.',
  `nombre_tipo_identificacion` VARCHAR(45) NULL COMMENT 'Nombre u descripción dada a cada tipo de usuario-',
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_identificacion_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_pais` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_pais` (
  `id_pais_pk` VARCHAR(2) NOT NULL COMMENT 'Identificador único para cada país.',
  `nombre_pais` LONGTEXT NULL COMMENT 'Nombre de cada país (debe escribirse correctamente).',
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_pais_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_persona` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_persona` (
  `id_persona_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada persona.',
  `primer_nombre` VARCHAR(100) NULL,
  `segundo_nombre` VARCHAR(100) NULL,
  `primer_apellido` VARCHAR(100) NULL,
  `segundo_apellido` VARCHAR(100) NULL,
  `identificacion` VARCHAR(50) NULL COMMENT 'Número de identificación usado por cada persona en el proceso de registro.',
  `id_tipo_persona_fk` INT NOT NULL,
  `id_tipo_alimentacion_fk` INT NOT NULL,
  `id_tipo_identificacion_fk` INT NOT NULL,
  `id_pais_fk` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_persona_pk`),
  INDEX `fk_tbl_persona_tbl_tipo_persona2_idx` (`id_tipo_persona_fk` ASC),
  INDEX `fk_tbl_persona_tbl_tipo_alimentacion1_idx` (`id_tipo_alimentacion_fk` ASC),
  INDEX `fk_tbl_persona_tbl_tipo_identificacion1_idx` (`id_tipo_identificacion_fk` ASC),
  INDEX `fk_tbl_persona_tbl_pais1_idx` (`id_pais_fk` ASC),
  CONSTRAINT `fk_tbl_persona_tbl_tipo_persona2`
    FOREIGN KEY (`id_tipo_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_persona` (`id_tipo_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_tbl_tipo_alimentacion1`
    FOREIGN KEY (`id_tipo_alimentacion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_alimentacion` (`id_tipo_alimentacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_tbl_tipo_identificacion1`
    FOREIGN KEY (`id_tipo_identificacion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_identificacion` (`id_tipo_identificacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_tbl_pais1`
    FOREIGN KEY (`id_pais_fk`)
    REFERENCES `dbCongresoceat`.`tbl_pais` (`id_pais_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_idioma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_idioma` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_idioma` (
  `id_idioma_pk` VARCHAR(2) NOT NULL,
  `nombre_idioma` VARCHAR(100) NULL,
  `bandera` VARCHAR(45) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_idioma_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario` (
  `id_usuario_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada usuario.',
  `nombre_usuario` VARCHAR(150) NULL COMMENT 'Nick de usuario usado por cada persona para logearse en el sistema',
  `contrasena` VARCHAR(100) NULL COMMENT 'Contraseña que junto con el nombre_usuario (Nick) controlan el login',
  `id_persona_fk` INT NOT NULL COMMENT 'Identificador único de persona, es una llave fornánea que hace referencia a la tabla persona que contiene los datos generales de cada individuo.',
  `id_idioma_fk` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_usuario_pk`),
  INDEX `fk_tbl_usuario_Persona1_idx` (`id_persona_fk` ASC),
  INDEX `fk_tbl_usuario_tbl_idioma1_idx` (`id_idioma_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_Persona1`
    FOREIGN KEY (`id_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_tbl_idioma1`
    FOREIGN KEY (`id_idioma_fk`)
    REFERENCES `dbCongresoceat`.`tbl_idioma` (`id_idioma_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_estado_congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_estado_congreso` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_estado_congreso` (
  `id_estado_congreso_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identifcador único para cada estado de congreso',
  `nombre_estado` VARCHAR(50) NULL COMMENT 'Nombre de estado de congreso, este puede ser, activo, inactivo, etc.',
  PRIMARY KEY (`id_estado_congreso_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_congreso` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_congreso` (
  `id_congreso_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada Congreso creado.',
  `nombre_congreso` LONGTEXT NULL COMMENT 'Nombre dado a cada congreso creado',
  `numero_cai` INT NULL COMMENT 'Número de cuenta de banco asociada al Congreso para cuestiones de pagos y demás.',
  `creado_por` INT NULL COMMENT 'Campo en el que se guarda el id del usuario que modifico o creó la información dentro de la tabla, notese que es un campo no referenciado directamente, pero el dato que se guardará hará referencia directa a un usuario.',
  `fecha_creacion` DATE NULL,
  `fecha_modificacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'Campo en el que se guarda el id del usuario que modifico o creó la información dentro de la tabla, notese que es un campo no referenciado directamente, pero el dato que se guardará hará referencia directa a un usuario.',
  `fecha_inicio` DATE NULL COMMENT 'fecha de inicio del congreso',
  `fecha_finalizacion` DATE NULL COMMENT 'fecha de finalizacion del congreso',
  `fecha_i_recepcion` DATE NULL COMMENT 'fecha de inicio de recepcion de trabajos',
  `fecha_f_recepcion` DATE NULL COMMENT 'fecha de finalizacion de recepcion de trabajos',
  `fecha_i_revision` DATE NULL COMMENT 'fecha de inicio de revisiones',
  `fecha_f_revision` DATE NULL COMMENT 'fecha de finalizacion de revisiones',
  `fecha_p_programa` DATE NULL COMMENT 'fecha de publicacion del programa',
  `id_estado_congreso_fk` INT NOT NULL COMMENT 'Identificador foráneo a la tabla \'tbl_estado_congreso\'.',
  `lema` VARCHAR(200) NULL,
  `siglas` VARCHAR(10) NULL,
  PRIMARY KEY (`id_congreso_pk`),
  INDEX `fk_tbl_congreso_tbl_estado_congreso1_idx` (`id_estado_congreso_fk` ASC),
  CONSTRAINT `fk_tbl_congreso_tbl_estado_congreso1`
    FOREIGN KEY (`id_estado_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_estado_congreso` (`id_estado_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_roles` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_roles` (
  `id_rol_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada rol dentro del sistema',
  `nombre_rol` VARCHAR(45) NULL COMMENT 'Nombre dado a cada rol que puede tener cada usuario, por ejemplo: administrador, editor, asistente, etc. (Cada usuario puede tener uno o más roles por congreso)',
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_rol_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_linea_investigacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_linea_investigacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_linea_investigacion` (
  `id_linea_investigacion_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tipo de linea de investigación',
  `nombre_linea_investigacion` MEDIUMTEXT NULL COMMENT 'Nombre dado a cada línea de investigación creado.',
  `descripcion_linea_investigacion` MEDIUMTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_linea_investigacion_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tematica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tematica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tematica` (
  `id_tematica_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único dado a cada tipo de temática.',
  `nombre_tematica` MEDIUMTEXT NOT NULL COMMENT 'Nombre dado a cada temática creada',
  `id_linea_investigacion_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_linea_investigacion\' y que asocia dentro de esta tabla cada temática a una línea de investigación específica.',
  `descripcion_tematica` MEDIUMTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tematica_pk`),
  INDEX `fk_tbl_tematica_tbl_linea_investigacion_idx` (`id_linea_investigacion_fk` ASC),
  CONSTRAINT `fk_tbl_tematica_tbl_linea_investigacion`
    FOREIGN KEY (`id_linea_investigacion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_linea_investigacion` (`id_linea_investigacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_modulos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_modulos` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_modulos` (
  `id_modulo_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_modulo` VARCHAR(100) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_modulo_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_roles_congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_roles_congreso` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_roles_congreso` (
  `tbl_rol_congreso_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para la indexación de ésta tabla.\'',
  `id_rol_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_rol\'',
  `id_congreso_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_congresol\'',
  PRIMARY KEY (`tbl_rol_congreso_pk`, `id_rol_fk`, `id_congreso_fk`),
  INDEX `fk_tbl_roles_has_tbl_congreso_tbl_congreso1_idx` (`id_congreso_fk` ASC),
  INDEX `fk_tbl_roles_has_tbl_congreso_tbl_roles1_idx` (`id_rol_fk` ASC),
  CONSTRAINT `fk_tbl_roles_has_tbl_congreso_tbl_roles1`
    FOREIGN KEY (`id_rol_fk`)
    REFERENCES `dbCongresoceat`.`tbl_roles` (`id_rol_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_roles_has_tbl_congreso_tbl_congreso1`
    FOREIGN KEY (`id_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_congreso_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_congreso_roles` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_congreso_roles` (
  `tbl_usuario_congreso_rol_pk` INT NOT NULL AUTO_INCREMENT,
  `id_usuario_fk` INT NOT NULL,
  `id_rol_congreso_fk` INT NOT NULL,
  `asistira` TINYINT(1) NULL COMMENT 'Campo booleano que sirve para determinar si el usuario asistirá o no al congreso indicado.',
  PRIMARY KEY (`tbl_usuario_congreso_rol_pk`),
  INDEX `fk_tbl_usuario_has_tbl_congreso_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  INDEX `fk_tbl_usuario_congreso_roles_tbl_roles_congreso1_idx` (`id_rol_congreso_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_has_tbl_congreso_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_congreso_roles_tbl_roles_congreso1`
    FOREIGN KEY (`id_rol_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_roles_congreso` (`tbl_rol_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_usuario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_usuario` (
  `id_tipo_usuario_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tipo de usuario.',
  `nombre_tipo_usuario` VARCHAR(45) NULL COMMENT 'Nombre dado a cada tipo de usuario dentro del sistema como por ejemplo super usuario.',
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_usuario_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_tipo_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_tipo_usuario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_tipo_usuario` (
  `id_usuario_fk` INT NOT NULL,
  `id_tipo_usuario_fk` INT NOT NULL,
  PRIMARY KEY (`id_usuario_fk`, `id_tipo_usuario_fk`),
  INDEX `fk_tbl_usuario_has_tbl_tipo_usuario_tbl_tipo_usuario1_idx` (`id_tipo_usuario_fk` ASC),
  INDEX `fk_tbl_usuario_has_tbl_tipo_usuario_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_has_tbl_tipo_usuario_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_has_tbl_tipo_usuario_tbl_tipo_usuario1`
    FOREIGN KEY (`id_tipo_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_usuario` (`id_tipo_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_congreso_roles_modulos_acciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_congreso_roles_modulos_acciones` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_congreso_roles_modulos_acciones` (
  `id_usuario_congreso_rol_fk` INT NOT NULL COMMENT 'Identificador que surje de la indexación de la tabla \'tbl_usuario_congreso_rol\', es una llave foránea que hace referencia a la tabla antes mencionada',
  `id_modulo_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_modulo\', sirve para identificar al módulo al cual se estableceran los accesos que tendrá el usuario.',
  `insertar` TINYINT(1) NOT NULL COMMENT 'Campo booleano para definir si el usuario tendrá o no acceso a insertar dentro del sistema.',
  `modificar` TINYINT(1) NOT NULL COMMENT 'Campo booleano para definir si el usuario tendrá o no acceso a modificar dentro del sistema.',
  `eliminar` TINYINT(1) NOT NULL COMMENT 'Campo booleano para definir si el usuario tendrá o no acceso a eliminar dentro del sistema.',
  PRIMARY KEY (`id_usuario_congreso_rol_fk`, `id_modulo_fk`),
  INDEX `fk_tbl_usuario_congreso_roles_has_tbl_modulos_tbl_modulos1_idx` (`id_modulo_fk` ASC),
  INDEX `fk_tbl_usuario_congreso_roles_has_tbl_modulos_tbl_usuario_c_idx` (`id_usuario_congreso_rol_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_congreso_roles_has_tbl_modulos_tbl_usuario_con1`
    FOREIGN KEY (`id_usuario_congreso_rol_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario_congreso_roles` (`tbl_usuario_congreso_rol_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_congreso_roles_has_tbl_modulos_tbl_modulos1`
    FOREIGN KEY (`id_modulo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_modulos` (`id_modulo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_telefono`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_telefono` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_telefono` (
  `id_telefono_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada número de teléfono',
  `numero_telefono` INT NULL COMMENT 'Aquí se almacenará ca da número telefónico',
  `id_persona_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'persona\' y que sirve para asociar cada número telefónica a una persona en específico.',
  `principal` TINYINT(1) NULL COMMENT 'Campo booleano que sirve para determinar si el numero telefónico en cuestión es o no el número principal de la persona.',
  PRIMARY KEY (`id_telefono_pk`),
  INDEX `fk_tbl_telefono_Persona1_idx` (`id_persona_fk` ASC),
  CONSTRAINT `fk_tbl_telefono_Persona1`
    FOREIGN KEY (`id_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_correo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_correo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_correo` (
  `id_correo_pk` INT NOT NULL AUTO_INCREMENT,
  `correo` VARCHAR(150) NULL,
  `principal` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el correo indicado es o no el que usa la persona como principal',
  `id_persona_fk` INT NOT NULL,
  PRIMARY KEY (`id_correo_pk`),
  INDEX `fk_tbl_correo_tbl_persona1_idx` (`id_persona_fk` ASC),
  CONSTRAINT `fk_tbl_correo_tbl_persona1`
    FOREIGN KEY (`id_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_red_social`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_red_social` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_red_social` (
  `id_red_social_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_red_social` VARCHAR(150) NULL,
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_red_social_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_institucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_institucion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_institucion` (
  `id_tipo_institucion_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_institucion` VARCHAR(150) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_institucion_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_institucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_institucion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_institucion` (
  `id_institucion_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_institucion` MEDIUMTEXT NULL,
  `id_tipo_institucion_fk` INT NOT NULL,
  `id_pais_fk` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_institucion_pk`),
  INDEX `fk_tbl_institucion_tbl_tipo_institucion1_idx` (`id_tipo_institucion_fk` ASC),
  INDEX `fk_tbl_institucion_tbl_pais1_idx` (`id_pais_fk` ASC),
  CONSTRAINT `fk_tbl_institucion_tbl_tipo_institucion1`
    FOREIGN KEY (`id_tipo_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_institucion` (`id_tipo_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_institucion_tbl_pais1`
    FOREIGN KEY (`id_pais_fk`)
    REFERENCES `dbCongresoceat`.`tbl_pais` (`id_pais_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_facultad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_facultad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_facultad` (
  `id_facultad_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_facultad` VARCHAR(150) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_facultad_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_carrera`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_carrera` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_carrera` (
  `id_carrera_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_carrera` VARCHAR(200) NULL,
  `tbl_carreracol` VARCHAR(45) NULL,
  PRIMARY KEY (`id_carrera_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_nivel_educativo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_nivel_educativo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_nivel_educativo` (
  `id_nivel_educativo_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_nivel_educativo` VARCHAR(150) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  PRIMARY KEY (`id_nivel_educativo_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_titulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_titulo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_titulo` (
  `id_titulo_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_titulo` VARCHAR(200) NULL,
  `id_nivel_educativo_fk` INT NOT NULL,
  `id_carrera_fk` INT NOT NULL,
  PRIMARY KEY (`id_titulo_pk`),
  INDEX `fk_tbl_titulo_tbl_nivel_educativo1_idx` (`id_nivel_educativo_fk` ASC),
  INDEX `fk_tbl_titulo_tbl_carrera1_idx` (`id_carrera_fk` ASC),
  CONSTRAINT `fk_tbl_titulo_tbl_nivel_educativo1`
    FOREIGN KEY (`id_nivel_educativo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_nivel_educativo` (`id_nivel_educativo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_titulo_tbl_carrera1`
    FOREIGN KEY (`id_carrera_fk`)
    REFERENCES `dbCongresoceat`.`tbl_carrera` (`id_carrera_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_persona_titulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_persona_titulo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_persona_titulo` (
  `id_persona_fk` INT NOT NULL,
  `id_titulo_fk` INT NOT NULL,
  PRIMARY KEY (`id_persona_fk`, `id_titulo_fk`),
  INDEX `fk_tbl_persona_has_tbl_titulo_tbl_titulo1_idx` (`id_titulo_fk` ASC),
  INDEX `fk_tbl_persona_has_tbl_titulo_tbl_persona1_idx` (`id_persona_fk` ASC),
  CONSTRAINT `fk_tbl_persona_has_tbl_titulo_tbl_persona1`
    FOREIGN KEY (`id_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_has_tbl_titulo_tbl_titulo1`
    FOREIGN KEY (`id_titulo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_titulo` (`id_titulo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_estado` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_estado` (
  `id_estado_pk` INT NOT NULL AUTO_INCREMENT,
  `estado` VARCHAR(45) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_estado_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_citacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_citacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_citacion` (
  `id_citacion_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_citacion` MEDIUMTEXT NULL,
  `descripcion` LONGTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_citacion_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_trabajo` (
  `id_tipo_trabajo_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_trabajo` VARCHAR(200) NULL,
  `numero_maximo_autores` INT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  `numero_maximo_palabras_clave` INT NULL,
  `numero_maximo_palabras_resumen` INT NULL,
  PRIMARY KEY (`id_tipo_trabajo_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_trabajo` (
  `id_trabajo_pk` INT NOT NULL AUTO_INCREMENT,
  `titulo_trabajo` VARCHAR(200) NULL,
  `fecha_subida` DATE NULL,
  `ubicacion_archivo` VARCHAR(200) NULL,
  `resumen` LONGTEXT NULL COMMENT 'Un resumen que reduce en síntesis de lo que se trata el trabajo.',
  `id_estado_fk` INT NOT NULL,
  `id_tematica_fk` INT NOT NULL COMMENT 'Identificador foráneo a la tabla \'tbl_tematica\' y que define una temática específica para cada trabajo.',
  `id_citacion_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_citacion\' y define para cada trabajo una citación específica.',
  `premio` TINYINT(1) NULL COMMENT 'Campo booleano que determina si el trabajo es calificado para premio o revista',
  `revista` TINYINT(1) NULL COMMENT 'Campo booleano que determina si el trabajo es calificado para premio o revista',
  `horario_sugerido` TIME NULL COMMENT 'Es el horario en el cual al usuario le gustaría presentar su trabajo (no necesariamente en el cual se va a presentar, ya que depende del programa).',
  `id_tipo_trabajo_fk` INT NOT NULL,
  `id_idioma_fk` VARCHAR(2) NOT NULL,
  `palabrasclave` MEDIUMTEXT NULL,
  `resumenprograma` MEDIUMTEXT NULL,
  PRIMARY KEY (`id_trabajo_pk`),
  INDEX `fk_tbl_trabajo_tbl_estado1_idx` (`id_estado_fk` ASC),
  INDEX `fk_tbl_trabajo_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  INDEX `fk_tbl_trabajo_tbl_citacion1_idx` (`id_citacion_fk` ASC),
  INDEX `fk_tbl_trabajo_tbl_tipo_trabajo1_idx` (`id_tipo_trabajo_fk` ASC),
  INDEX `fk_tbl_trabajo_tbl_idioma1_idx` (`id_idioma_fk` ASC),
  CONSTRAINT `fk_tbl_trabajo_tbl_estado1`
    FOREIGN KEY (`id_estado_fk`)
    REFERENCES `dbCongresoceat`.`tbl_estado` (`id_estado_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_trabajo_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_trabajo_tbl_citacion1`
    FOREIGN KEY (`id_citacion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_citacion` (`id_citacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_trabajo_tbl_tipo_trabajo1`
    FOREIGN KEY (`id_tipo_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_trabajo` (`id_tipo_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_trabajo_tbl_idioma1`
    FOREIGN KEY (`id_idioma_fk`)
    REFERENCES `dbCongresoceat`.`tbl_idioma` (`id_idioma_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_archivo_complementario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_archivo_complementario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_archivo_complementario` (
  `id_archivo_complementario_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_archivo` VARCHAR(200) NULL,
  `descripcion` MEDIUMTEXT NULL,
  `ubicacion_archivo` VARCHAR(200) NULL,
  `id_trabajo_fk` INT NOT NULL,
  PRIMARY KEY (`id_archivo_complementario_pk`),
  INDEX `fk_tbl_archivos_complementarios_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  CONSTRAINT `fk_tbl_archivos_complementarios_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_trabajo_tematica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_trabajo_tematica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_trabajo_tematica` (
  `id_trabajo_fk` INT NOT NULL,
  `id_tematica_fk` INT NOT NULL,
  `principal` TINYINT(1) NULL,
  PRIMARY KEY (`id_trabajo_fk`, `id_tematica_fk`),
  INDEX `fk_tbl_trabajo_has_tbl_tematica_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  INDEX `fk_tbl_trabajo_has_tbl_tematica_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  CONSTRAINT `fk_tbl_trabajo_has_tbl_tematica_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_trabajo_has_tbl_tematica_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_trabajo` (
  `id_usuario_trabajo_pk` INT NOT NULL AUTO_INCREMENT,
  `id_usuario_fk` INT NOT NULL,
  `id_trabajo_fk` INT NOT NULL,
  `subio` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el usuario en cuestión fue quien subió el archivo.',
  `autor_principal` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el usuario en cuestión es el autor principal del trabajo.',
  `coautor` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el usuario en cuestión es el co-autor principal del trabajo.',
  `expositor` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el usuario en cuestión es el expositor del trabajo.',
  PRIMARY KEY (`id_usuario_trabajo_pk`, `id_usuario_fk`, `id_trabajo_fk`),
  INDEX `fk_tbl_usuario_has_tbl_trabajo_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  INDEX `fk_tbl_usuario_has_tbl_trabajo_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_has_tbl_trabajo_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_has_tbl_trabajo_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_premio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_premio` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_premio` (
  `id_premio_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único dado a cada premio',
  `nombre_premio` MEDIUMTEXT NOT NULL,
  `id_tematica_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_tematica\' y que asocia cada premio con una temática específica.',
  PRIMARY KEY (`id_premio_pk`),
  INDEX `fk_tbl_premio_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  CONSTRAINT `fk_tbl_premio_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_actividad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_actividad` (
  `id_tipo_actividad_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_actividad` MEDIUMTEXT NULL,
  PRIMARY KEY (`id_tipo_actividad_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_espacio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_espacio` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_espacio` (
  `id_espacio_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_espacio` VARCHAR(100) NULL,
  `nombre_alternativo` VARCHAR(100) NULL,
  `descripcion_espacio` MEDIUMTEXT NULL,
  `capacidad_personas` INT NULL,
  `numero_tomacorriente` INT NULL,
  `mapa_espacio` VARCHAR(100) NULL,
  `comentarios` LONGTEXT NULL,
  PRIMARY KEY (`id_espacio_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_actividad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_actividad` (
  `id_actividad_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_actividad` VARCHAR(200) NULL,
  `hora_inicio` TIME NULL,
  `hora_final` TIME NULL,
  `presento` TINYINT(1) NULL COMMENT 'Este campo booleano sirve para determinar si el trabajo se presentó o no en la actividad.',
  `id_tipo_actividad_fk` INT NOT NULL,
  `id_espacio_pk` INT NOT NULL,
  `fecha_actividad` DATE NULL,
  PRIMARY KEY (`id_actividad_pk`),
  INDEX `fk_tbl_actividad_tbl_tipo_actividad1_idx` (`id_tipo_actividad_fk` ASC),
  INDEX `fk_tbl_actividad_tbl_espacio1_idx` (`id_espacio_pk` ASC),
  CONSTRAINT `fk_tbl_actividad_tbl_tipo_actividad1`
    FOREIGN KEY (`id_tipo_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_actividad` (`id_tipo_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_actividad_tbl_espacio1`
    FOREIGN KEY (`id_espacio_pk`)
    REFERENCES `dbCongresoceat`.`tbl_espacio` (`id_espacio_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_programa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_programa` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_programa` (
  `id_programa_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_programa` VARCHAR(100) NULL,
  `descripcion` LONGTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` INT NULL,
  PRIMARY KEY (`id_programa_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_actividad_congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_actividad_congreso` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_actividad_congreso` (
  `id_usuario_fk` INT NOT NULL,
  `id_actividad_fk` INT NOT NULL,
  `id_congreso_fk` INT NOT NULL,
  `asistio` TINYINT(1) NULL COMMENT 'Campo booleando que determina si un usuario asisitió o no a una actividad específica para un congreso dado.',
  PRIMARY KEY (`id_usuario_fk`, `id_actividad_fk`),
  INDEX `fk_tbl_usuario_has_tbl_actividad_tbl_actividad1_idx` (`id_actividad_fk` ASC),
  INDEX `fk_tbl_usuario_has_tbl_actividad_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  INDEX `fk_tbl_usuario_has_tbl_actividad_tbl_congreso1_idx` (`id_congreso_fk` ASC),
  CONSTRAINT `fk_tbl_usuario_has_tbl_actividad_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_has_tbl_actividad_tbl_actividad1`
    FOREIGN KEY (`id_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_actividad` (`id_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_has_tbl_actividad_tbl_congreso1`
    FOREIGN KEY (`id_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_congreso_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_congreso_actividad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_congreso_actividad` (
  `id_congreso_fk` INT NOT NULL,
  `id_actividad_fk` INT NOT NULL,
  `id_linea_investigacion_pk` INT NULL,
  PRIMARY KEY (`id_congreso_fk`, `id_actividad_fk`),
  INDEX `fk_tbl_congreso_has_tbl_actividad_tbl_actividad1_idx` (`id_actividad_fk` ASC),
  INDEX `fk_tbl_congreso_has_tbl_actividad_tbl_congreso1_idx` (`id_congreso_fk` ASC),
  INDEX `fk_tbl_congreso_actividad_tbl_linea_investigacion1_idx` (`id_linea_investigacion_pk` ASC),
  CONSTRAINT `fk_tbl_congreso_has_tbl_actividad_tbl_congreso1`
    FOREIGN KEY (`id_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_congreso_has_tbl_actividad_tbl_actividad1`
    FOREIGN KEY (`id_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_actividad` (`id_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_congreso_actividad_tbl_linea_investigacion1`
    FOREIGN KEY (`id_linea_investigacion_pk`)
    REFERENCES `dbCongresoceat`.`tbl_linea_investigacion` (`id_linea_investigacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_premio_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_premio_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_premio_trabajo` (
  `id_premio_fk` INT NOT NULL,
  `id_trabajo_fk` INT NOT NULL,
  PRIMARY KEY (`id_premio_fk`, `id_trabajo_fk`),
  INDEX `fk_tbl_premio_has_tbl_trabajo_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  INDEX `fk_tbl_premio_has_tbl_trabajo_tbl_premio1_idx` (`id_premio_fk` ASC),
  CONSTRAINT `fk_tbl_premio_has_tbl_trabajo_tbl_premio1`
    FOREIGN KEY (`id_premio_fk`)
    REFERENCES `dbCongresoceat`.`tbl_premio` (`id_premio_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_premio_has_tbl_trabajo_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_patrocinador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_patrocinador` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_patrocinador` (
  `id_patrocinador_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_patrocinador` MEDIUMTEXT NOT NULL,
  `url` LONGTEXT NULL,
  `id_persona_contacto` INT NOT NULL,
  `descripcion` LONGTEXT NULL,
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  `id_tipo_institucion_fk` INT NOT NULL,
  PRIMARY KEY (`id_patrocinador_pk`),
  INDEX `fk_tbl_patrocinador_tbl_persona1_idx` (`id_persona_contacto` ASC),
  INDEX `fk_tbl_patrocinador_tbl_tipo_institucion1_idx` (`id_tipo_institucion_fk` ASC),
  CONSTRAINT `fk_tbl_patrocinador_tbl_persona1`
    FOREIGN KEY (`id_persona_contacto`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_patrocinador_tbl_tipo_institucion1`
    FOREIGN KEY (`id_tipo_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_institucion` (`id_tipo_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_premio_patrocinador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_premio_patrocinador` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_premio_patrocinador` (
  `id_premio_fk` INT NOT NULL,
  `id_patrocinador_fk` INT NOT NULL,
  `persona` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el premio fue patrocinado por una persona u institución.',
  `institucion` TINYINT(1) NULL COMMENT 'Campo booleano para saber si el premio fue patrocinado por una persona u institución.',
  PRIMARY KEY (`id_premio_fk`, `id_patrocinador_fk`),
  INDEX `fk_tbl_premio_has_tbl_patrocinador_tbl_patrocinador1_idx` (`id_patrocinador_fk` ASC),
  INDEX `fk_tbl_premio_has_tbl_patrocinador_tbl_premio1_idx` (`id_premio_fk` ASC),
  CONSTRAINT `fk_tbl_premio_has_tbl_patrocinador_tbl_premio1`
    FOREIGN KEY (`id_premio_fk`)
    REFERENCES `dbCongresoceat`.`tbl_premio` (`id_premio_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_premio_has_tbl_patrocinador_tbl_patrocinador1`
    FOREIGN KEY (`id_patrocinador_fk`)
    REFERENCES `dbCongresoceat`.`tbl_patrocinador` (`id_patrocinador_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_formulario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_formulario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_formulario` (
  `id_formulario_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_formulario` MEDIUMTEXT NULL,
  `descripcion` LONGTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_formulario_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_formulario_tematica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_formulario_tematica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_formulario_tematica` (
  `id_formulario_fk` INT NOT NULL,
  `id_tematica_fk` INT NOT NULL,
  PRIMARY KEY (`id_formulario_fk`, `id_tematica_fk`),
  INDEX `fk_tbl_formulario_has_tbl_tematica_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  INDEX `fk_tbl_formulario_has_tbl_tematica_tbl_formulario1_idx` (`id_formulario_fk` ASC),
  CONSTRAINT `fk_tbl_formulario_has_tbl_tematica_tbl_formulario1`
    FOREIGN KEY (`id_formulario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_formulario` (`id_formulario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_formulario_has_tbl_tematica_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_pregunta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_pregunta` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_pregunta` (
  `id_tipo_pregunta_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_pregunta` VARCHAR(45) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_pregunta_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_pregunta_cuantitativa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_pregunta_cuantitativa` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_pregunta_cuantitativa` (
  `id_pregunta_cuantitativa_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_pregunta_cuantitativa` LONGTEXT NULL,
  `ponderacion` INT NULL,
  `id_formulario_fk` INT NOT NULL,
  `id_tipo_pregunta_fk` INT NOT NULL,
  PRIMARY KEY (`id_pregunta_cuantitativa_pk`),
  INDEX `fk_tbl_preguntas_cuantitativas_tbl_formulario1_idx` (`id_formulario_fk` ASC),
  INDEX `fk_tbl_preguntas_cuantitativas_tbl_tipo_pregunta1_idx` (`id_tipo_pregunta_fk` ASC),
  CONSTRAINT `fk_tbl_preguntas_cuantitativas_tbl_formulario1`
    FOREIGN KEY (`id_formulario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_formulario` (`id_formulario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_preguntas_cuantitativas_tbl_tipo_pregunta1`
    FOREIGN KEY (`id_tipo_pregunta_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_pregunta` (`id_tipo_pregunta_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_respuesta_cuantitativa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_respuesta_cuantitativa` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_respuesta_cuantitativa` (
  `id_respuesta_cuantitativa_pk` INT NOT NULL AUTO_INCREMENT,
  `respuesta_cuantitativa` INT NULL,
  `id_pregunta_cuantitativa_fk` INT NOT NULL,
  PRIMARY KEY (`id_respuesta_cuantitativa_pk`),
  INDEX `fk_tbl_respuestas_cuantitativas_tbl_preguntas_cuantitativas_idx` (`id_pregunta_cuantitativa_fk` ASC),
  CONSTRAINT `fk_tbl_respuestas_cuantitativas_tbl_preguntas_cuantitativas1`
    FOREIGN KEY (`id_pregunta_cuantitativa_fk`)
    REFERENCES `dbCongresoceat`.`tbl_pregunta_cuantitativa` (`id_pregunta_cuantitativa_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_pregunta_cualitativa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_pregunta_cualitativa` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_pregunta_cualitativa` (
  `id_pregunta_cualitativa_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_pregunta_cualitativa` LONGTEXT NULL,
  `id_formulario_fk` INT NOT NULL,
  `id_tipo_pregunta_fk` INT NOT NULL,
  PRIMARY KEY (`id_pregunta_cualitativa_pk`),
  INDEX `fk_tbl_preguntas_cualitativas_tbl_formulario1_idx` (`id_formulario_fk` ASC),
  INDEX `fk_tbl_preguntas_cualitativas_tbl_tipo_pregunta1_idx` (`id_tipo_pregunta_fk` ASC),
  CONSTRAINT `fk_tbl_preguntas_cualitativas_tbl_formulario1`
    FOREIGN KEY (`id_formulario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_formulario` (`id_formulario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_preguntas_cualitativas_tbl_tipo_pregunta1`
    FOREIGN KEY (`id_tipo_pregunta_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_pregunta` (`id_tipo_pregunta_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_respuesta_cualitativa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_respuesta_cualitativa` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_respuesta_cualitativa` (
  `id_respuesta_cualitativa_pk` INT NOT NULL AUTO_INCREMENT,
  `respuesta_cualitativa` LONGTEXT NULL,
  `id_pregunta_cualitativa_fk` INT NOT NULL,
  PRIMARY KEY (`id_respuesta_cualitativa_pk`),
  INDEX `fk_tbl_respuestas_cualitativas_tbl_preguntas_cualitativas1_idx` (`id_pregunta_cualitativa_fk` ASC),
  CONSTRAINT `fk_tbl_respuestas_cualitativas_tbl_preguntas_cualitativas1`
    FOREIGN KEY (`id_pregunta_cualitativa_fk`)
    REFERENCES `dbCongresoceat`.`tbl_pregunta_cualitativa` (`id_pregunta_cualitativa_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tour`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tour` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tour` (
  `id_tour_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tour creado',
  `nombre_tour` VARCHAR(150) NULL,
  `descripcion` MEDIUMTEXT NULL COMMENT 'Descripción general del tour, aquí pueden ir datos de interés para dicho tour.',
  `comentario` VARCHAR(150) NULL COMMENT 'Algún dato clave que pueda ser de utilidad',
  `costo` DOUBLE NULL,
  `creado_por` INT NULL,
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL,
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tour_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tour_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tour_usuario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tour_usuario` (
  `id_tour_usuario_pk` INT NOT NULL AUTO_INCREMENT,
  `id_tour_fk` INT NOT NULL,
  `id_usuario_fk` INT NOT NULL,
  PRIMARY KEY (`id_tour_usuario_pk`, `id_tour_fk`, `id_usuario_fk`),
  INDEX `fk_tbl_tour_has_tbl_usuario_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  INDEX `fk_tbl_tour_has_tbl_usuario_tbl_tour1_idx` (`id_tour_fk` ASC),
  CONSTRAINT `fk_tbl_tour_has_tbl_usuario_tbl_tour1`
    FOREIGN KEY (`id_tour_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tour` (`id_tour_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_tour_has_tbl_usuario_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_rango`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_rango` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_rango` (
  `id_rango_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_rango` VARCHAR(50) NULL,
  `fecha_inicio` DATE NULL,
  `fecha_final` DATE NULL,
  PRIMARY KEY (`id_rango_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_factura` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_factura` (
  `id_factura_pk` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NOT NULL,
  `identificador` INT NULL COMMENT 'Aquí se guardará el identificador de la entidad a la cual va dirigida la factura.',
  `id_rango_pk` INT NOT NULL,
  PRIMARY KEY (`id_factura_pk`),
  INDEX `fk_tbl_factura_tbl_rango1_idx` (`id_rango_pk` ASC),
  CONSTRAINT `fk_tbl_factura_tbl_rango1`
    FOREIGN KEY (`id_rango_pk`)
    REFERENCES `dbCongresoceat`.`tbl_rango` (`id_rango_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_costo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_costo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_costo` (
  `id_costo_pk` INT NOT NULL AUTO_INCREMENT,
  `costo_momento` DOUBLE NULL,
  `costo_exposicion` DOUBLE NULL,
  `estudiante` TINYINT(1) NULL COMMENT 'Campo booleano que determina al momento del cobro si quien va a realizar el pago es un estudiante o no, ya que de ser un estudiante se aplicará un costo especial.',
  `id_rol_congreso_fk` INT NOT NULL COMMENT 'Identificador foráneo a la tabla \'tbl_rol_congreso\' para saber el rol que realizó el usuario en un congreso determinado.',
  PRIMARY KEY (`id_costo_pk`),
  INDEX `fk_tbl_costo_tbl_roles_congreso1_idx` (`id_rol_congreso_fk` ASC),
  CONSTRAINT `fk_tbl_costo_tbl_roles_congreso1`
    FOREIGN KEY (`id_rol_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_roles_congreso` (`tbl_rol_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_factura_detalle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_factura_detalle` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_factura_detalle` (
  `id_factura_fk` INT NOT NULL,
  `porcentaje_costo_usuario` DOUBLE NULL,
  `porcentaje_tour` DOUBLE NULL,
  `momento` TINYINT(1) NULL,
  `id_tour_usuario_fk` INT NOT NULL,
  INDEX `fk_tbl_factura_has_tbl_costo_usuario_tbl_factura1_idx` (`id_factura_fk` ASC),
  INDEX `fk_tbl_factura_detalle_tbl_tour_usuario1_idx` (`id_tour_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_factura_has_tbl_costo_usuario_tbl_factura1`
    FOREIGN KEY (`id_factura_fk`)
    REFERENCES `dbCongresoceat`.`tbl_factura` (`id_factura_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_factura_detalle_tbl_tour_usuario1`
    FOREIGN KEY (`id_tour_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tour_usuario` (`id_tour_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_voluntario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_voluntario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_voluntario` (
  `id_voluntario_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único asociado a cada voluntario',
  `numero_horas` DOUBLE NULL,
  `comentarios` MEDIUMTEXT NULL,
  `estado` TINYINT(1) NULL,
  `id_rol_congreso_fk` INT NOT NULL COMMENT 'Identificador foráneo que hace referencia a la tabla \'tbl_rol_congreso\' y que sirve para identificar el rol y el congreso del voluntario en cuestión.',
  PRIMARY KEY (`id_voluntario_pk`),
  INDEX `fk_tbl_voluntario_tbl_roles_congreso1_idx` (`id_rol_congreso_fk` ASC),
  CONSTRAINT `fk_tbl_voluntario_tbl_roles_congreso1`
    FOREIGN KEY (`id_rol_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_roles_congreso` (`tbl_rol_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tarea_voluntario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tarea_voluntario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tarea_voluntario` (
  `id_tarea_voluntario_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para cada tarea asociada a un voluntario. Ojo, éste campo no surje de la indexación porque esta no es una tabla transaccional, sino más bien la descripción de tareas que se asocian a los voluntarios.',
  `nombre_tarea` LONGTEXT NULL,
  `descripcion` LONGTEXT NULL,
  `ubicacion_complementario` MEDIUMTEXT NULL,
  `comentarios` MEDIUMTEXT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  `fecha_tarea` DATE NULL,
  `hora_tarea` TIME NULL,
  PRIMARY KEY (`id_tarea_voluntario_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_voluntario_tarea_voluntario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_voluntario_tarea_voluntario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_voluntario_tarea_voluntario` (
  `id_voluntario_fk` INT NOT NULL,
  `id_tarea_voluntario_fk` INT NOT NULL,
  PRIMARY KEY (`id_voluntario_fk`, `id_tarea_voluntario_fk`),
  INDEX `fk_tbl_voluntario_has_tbl_tarea_voluntario_tbl_tarea_volunt_idx` (`id_tarea_voluntario_fk` ASC),
  INDEX `fk_tbl_voluntario_has_tbl_tarea_voluntario_tbl_voluntario1_idx` (`id_voluntario_fk` ASC),
  CONSTRAINT `fk_tbl_voluntario_has_tbl_tarea_voluntario_tbl_voluntario1`
    FOREIGN KEY (`id_voluntario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_voluntario` (`id_voluntario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_voluntario_has_tbl_tarea_voluntario_tbl_tarea_voluntar1`
    FOREIGN KEY (`id_tarea_voluntario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tarea_voluntario` (`id_tarea_voluntario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_dictamen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_dictamen` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_dictamen` (
  `id_tipo_dictamen_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_dictamen` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_dictamen_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_asignacion_a_revisor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_asignacion_a_revisor` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_asignacion_a_revisor` (
  `id_asignacion_a_revisor_pk` INT NOT NULL AUTO_INCREMENT,
  `pendiente_aceptacion` TINYINT(1) NULL,
  `aceptado` TINYINT(1) NULL,
  `fecha_acepto_rechazo` DATE NULL,
  `fecha_que_se_le_asigno` DATE NULL,
  `id_trabajo_fk` INT NOT NULL,
  `id_usuario_que_asigna` INT NULL COMMENT 'Este campo identifica al usuario en cuestion, pero de una forma referenciada, no relacional, es decir; lo que aui se guardara es la referencia al usuario',
  `id_usuario_que_recibe` INT NULL COMMENT 'Este campo identifica al usuario en cuestion, pero de una forma referenciada, no relacional, es decir; lo que aui se guardara es la referencia al usuario',
  `id_tipo_dictamen_fk` INT NOT NULL,
  PRIMARY KEY (`id_asignacion_a_revisor_pk`),
  INDEX `fk_tbl_asignacion_a_revisores_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  INDEX `fk_tbl_asignacion_a_revisor_tbl_tipo_dictamen1_idx` (`id_tipo_dictamen_fk` ASC),
  CONSTRAINT `fk_tbl_asignacion_a_revisores_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_asignacion_a_revisor_tbl_tipo_dictamen1`
    FOREIGN KEY (`id_tipo_dictamen_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_dictamen` (`id_tipo_dictamen_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_version_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_version_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_version_trabajo` (
  `id_version_trabajo_pk` INT NOT NULL AUTO_INCREMENT,
  `ubicacion_archivo` VARCHAR(200) NULL,
  `version_editor_gestor` TINYINT(1) NULL,
  `version_aprobado_conrevision` TINYINT(1) NULL,
  `descripcion` VARCHAR(200) NULL,
  `id_usuario_que_subio_fk` INT NOT NULL,
  `id_trabajo_fk` INT NOT NULL,
  `fecha_subida` DATE NULL,
  PRIMARY KEY (`id_version_trabajo_pk`),
  INDEX `fk_tbl_version_trabajo_tbl_usuario1_idx` (`id_usuario_que_subio_fk` ASC),
  INDEX `fk_tbl_version_trabajo_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  CONSTRAINT `fk_tbl_version_trabajo_tbl_usuario1`
    FOREIGN KEY (`id_usuario_que_subio_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_version_trabajo_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_asignacion_editor_seccion_secundario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_asignacion_editor_seccion_secundario` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_asignacion_editor_seccion_secundario` (
  `id_asignacion_editor_seccion_secundaria_pk` INT NOT NULL AUTO_INCREMENT,
  `fecha_recibe_asignacion` DATE NULL,
  `id_usuario_que_asigna` INT NULL COMMENT 'Este campo identifica al usuario en cuestion, pero de una forma referenciada, no relacional, es decir; lo que aui se guardara es la referencia al usuario',
  `id_usuario_que_recibe` INT NULL COMMENT 'Este campo identifica al usuario en cuestion, pero de una forma referenciada, no relacional, es decir; lo que aui se guardara es la referencia al usuario',
  `a_dictamen` TINYINT(1) NULL,
  `id_trabajo_fk` INT NOT NULL,
  PRIMARY KEY (`id_asignacion_editor_seccion_secundaria_pk`),
  INDEX `fk_tbl_asignacion_editor_seccion_secundario_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  CONSTRAINT `fk_tbl_asignacion_editor_seccion_secundario_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_notificacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_notificacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_notificacion` (
  `id_notificacion_pk` INT NOT NULL AUTO_INCREMENT,
  `texto_notificacion` LONGTEXT NULL,
  `id_usuario_fk` INT NOT NULL,
  `fecha_notificacion` DATE NULL,
  `hora_notificacion` TIME NULL,
  PRIMARY KEY (`id_notificacion_pk`),
  INDEX `fk_tbl_notificacion_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_notificacion_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_noticia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_noticia` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_noticia` (
  `id_noticia_pk` INT NOT NULL AUTO_INCREMENT,
  `titulo` MEDIUMTEXT NULL,
  `imagen` MEDIUMTEXT NULL,
  `descripcion` LONGTEXT NULL,
  `id_usuario_congreso_rol_fk` INT NOT NULL,
  `fecha` VARCHAR(45) NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_noticia_pk`),
  INDEX `fk_tbl_noticia_tbl_usuario_congreso_roles1_idx` (`id_usuario_congreso_rol_fk` ASC),
  CONSTRAINT `fk_tbl_noticia_tbl_usuario_congreso_roles1`
    FOREIGN KEY (`id_usuario_congreso_rol_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario_congreso_roles` (`tbl_usuario_congreso_rol_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_estadistica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_estadistica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_estadistica` (
  `id_tipo_estadistica_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_estadistica` VARCHAR(200) NULL,
  `tbl_tipo_estadisticacol` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_estadistica_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_estadistica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_estadistica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_estadistica` (
  `id_estadistica_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_estadistica` LONGTEXT NULL,
  `descripcion` LONGTEXT NULL,
  `id_tipo_estadistica_fk` INT NOT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_estadistica_pk`),
  INDEX `fk_tbl_estadistica_tbl_tipo_estadistica1_idx` (`id_tipo_estadistica_fk` ASC),
  CONSTRAINT `fk_tbl_estadistica_tbl_tipo_estadistica1`
    FOREIGN KEY (`id_tipo_estadistica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_estadistica` (`id_tipo_estadistica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_logs` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_logs` (
  `id_tipo_log_pk` INT NOT NULL,
  `tipo_log` VARCHAR(150) NULL,
  PRIMARY KEY (`id_tipo_log_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_log` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_log` (
  `id_log_pk` INT NOT NULL AUTO_INCREMENT,
  `id_usuario_fk` INT NOT NULL,
  `fecha` DATE NULL,
  `hora` TIME NULL,
  `ip` VARCHAR(45) NULL,
  `informacion_extra` LONGTEXT NULL,
  `id_tipo_log_fk` INT NOT NULL,
  PRIMARY KEY (`id_log_pk`),
  INDEX `fk_tbl_log_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  INDEX `fk_tbl_log_tbl_tipo_logs1_idx` (`id_tipo_log_fk` ASC),
  CONSTRAINT `fk_tbl_log_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_log_tbl_tipo_logs1`
    FOREIGN KEY (`id_tipo_log_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_logs` (`id_tipo_log_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_rtn`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_rtn` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_rtn` (
  `id_rtn_pk` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único para el \'RTN\' de cada individuo, persona u empresa con obligaciones tributarias hacia el Estado.',
  `empresa` TINYINT(1) NULL COMMENT 'Campo booleano que sirve para identificar si el individuo en cuestión es una empresa.',
  `persona` TINYINT(1) NULL COMMENT 'Campo booleano que sirve para identificar si el individuo en cuestión es una persona.',
  `identificador` INT NULL COMMENT 'Este es un tipo de idenificador, aunque no este relacionado, se guardara en el un id de referencia del tipo persona u empresa.',
  PRIMARY KEY (`id_rtn_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_persona_red_social`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_persona_red_social` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_persona_red_social` (
  `id_persona_pk` INT NOT NULL,
  `id_red_social_pk` INT NOT NULL,
  PRIMARY KEY (`id_persona_pk`, `id_red_social_pk`),
  INDEX `fk_tbl_persona_has_tbl_red_social_tbl_red_social1_idx` (`id_red_social_pk` ASC),
  INDEX `fk_tbl_persona_has_tbl_red_social_tbl_persona1_idx` (`id_persona_pk` ASC),
  CONSTRAINT `fk_tbl_persona_has_tbl_red_social_tbl_persona1`
    FOREIGN KEY (`id_persona_pk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_has_tbl_red_social_tbl_red_social1`
    FOREIGN KEY (`id_red_social_pk`)
    REFERENCES `dbCongresoceat`.`tbl_red_social` (`id_red_social_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_congreso_linea_investigacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_congreso_linea_investigacion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_congreso_linea_investigacion` (
  `id_congreso_pk` INT NOT NULL,
  `id_linea_investigacion_pk` INT NOT NULL,
  PRIMARY KEY (`id_congreso_pk`, `id_linea_investigacion_pk`),
  INDEX `fk_tbl_congreso_has_tbl_linea_investigacion_tbl_linea_inves_idx` (`id_linea_investigacion_pk` ASC),
  INDEX `fk_tbl_congreso_has_tbl_linea_investigacion_tbl_congreso1_idx` (`id_congreso_pk` ASC),
  CONSTRAINT `fk_tbl_congreso_has_tbl_linea_investigacion_tbl_congreso1`
    FOREIGN KEY (`id_congreso_pk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_congreso_has_tbl_linea_investigacion_tbl_linea_investi1`
    FOREIGN KEY (`id_linea_investigacion_pk`)
    REFERENCES `dbCongresoceat`.`tbl_linea_investigacion` (`id_linea_investigacion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_actividad_tematica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_actividad_tematica` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_actividad_tematica` (
  `id_actividad_fk` INT NOT NULL,
  `id_tematica_fk` INT NOT NULL,
  PRIMARY KEY (`id_actividad_fk`, `id_tematica_fk`),
  INDEX `fk_tbl_actividad_has_tbl_tematica_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  INDEX `fk_tbl_actividad_has_tbl_tematica_tbl_actividad1_idx` (`id_actividad_fk` ASC),
  CONSTRAINT `fk_tbl_actividad_has_tbl_tematica_tbl_actividad1`
    FOREIGN KEY (`id_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_actividad` (`id_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_actividad_has_tbl_tematica_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Cuando se crea una actividad puede asociarse a una o más lineas de investigación, a su vez; al pertenecer a una línea de investigación, puede estar asociada a todas o algunas de las temáticas concernientes a ésa línea, como cada temática está asociada a una línea de investigación, basta con asociar actividad con temática para obtener los tres datos y tener la libertad de asociar a \'actividad\' con una o más \'temáticas\' y a su vez \'líneas de investigación\'.';


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_programa_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_programa_actividad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_programa_actividad` (
  `id_programa_fk` INT NOT NULL,
  `id_actividad_fk` INT NOT NULL,
  PRIMARY KEY (`id_programa_fk`, `id_actividad_fk`),
  INDEX `fk_tbl_programa_has_tbl_actividad_tbl_actividad1_idx` (`id_actividad_fk` ASC),
  INDEX `fk_tbl_programa_has_tbl_actividad_tbl_programa1_idx` (`id_programa_fk` ASC),
  CONSTRAINT `fk_tbl_programa_has_tbl_actividad_tbl_programa1`
    FOREIGN KEY (`id_programa_fk`)
    REFERENCES `dbCongresoceat`.`tbl_programa` (`id_programa_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_programa_has_tbl_actividad_tbl_actividad1`
    FOREIGN KEY (`id_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_actividad` (`id_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_centros`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_centros` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_centros` (
  `id_centro_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_centro` MEDIUMTEXT NULL,
  `id_institucion_fk` INT NOT NULL,
  PRIMARY KEY (`id_centro_pk`, `id_institucion_fk`),
  INDEX `fk_tbl_centros_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  CONSTRAINT `fk_tbl_centros_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_perfiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_perfiles` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_perfiles` (
  `id_perfil_pk` INT NOT NULL,
  `id_usuario_congreso_roles_fk` INT NOT NULL,
  `resumen_bibliografico` VARCHAR(250) NULL,
  `certificado` TINYINT(1) NULL,
  `codigo` VARCHAR(150) NULL,
  `institucion` INT NULL,
  PRIMARY KEY (`id_perfil_pk`),
  INDEX `fk_tbl_perfiles_tbl_usuario_congreso_roles1_idx` (`id_usuario_congreso_roles_fk` ASC),
  CONSTRAINT `fk_tbl_perfiles_tbl_usuario_congreso_roles1`
    FOREIGN KEY (`id_usuario_congreso_roles_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario_congreso_roles` (`tbl_usuario_congreso_rol_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_congreso_rol_tematicas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_congreso_rol_tematicas` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_congreso_rol_tematicas` (
  `id_tematica_fk` INT NOT NULL,
  `id_usuario_congreso_roles_fk` INT NOT NULL,
  INDEX `fk_tbl_congreso_rol_tematicas_tbl_tematica1_idx` (`id_tematica_fk` ASC),
  INDEX `fk_tbl_congreso_rol_tematicas_tbl_usuario_congreso_roles1_idx` (`id_usuario_congreso_roles_fk` ASC),
  CONSTRAINT `fk_tbl_congreso_rol_tematicas_tbl_tematica1`
    FOREIGN KEY (`id_tematica_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tematica` (`id_tematica_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_congreso_rol_tematicas_tbl_usuario_congreso_roles1`
    FOREIGN KEY (`id_usuario_congreso_roles_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario_congreso_roles` (`tbl_usuario_congreso_rol_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_idiomas_personas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_idiomas_personas` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_idiomas_personas` (
  `principal` TINYINT(1) NULL,
  `id_idioma_fk` VARCHAR(2) NOT NULL,
  `id_persona_pk` INT NOT NULL,
  INDEX `fk_tbl_idiomas_usuarios_tbl_idioma1_idx` (`id_idioma_fk` ASC),
  INDEX `fk_tbl_idiomas_usuarios_tbl_persona1_idx` (`id_persona_pk` ASC),
  CONSTRAINT `fk_tbl_idiomas_usuarios_tbl_idioma1`
    FOREIGN KEY (`id_idioma_fk`)
    REFERENCES `dbCongresoceat`.`tbl_idioma` (`id_idioma_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_idiomas_usuarios_tbl_persona1`
    FOREIGN KEY (`id_persona_pk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_actividad_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_actividad_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_actividad_trabajo` (
  `id_actividad_fk` INT NOT NULL,
  `id_trabajo_fk` INT NOT NULL,
  PRIMARY KEY (`id_actividad_fk`, `id_trabajo_fk`),
  INDEX `fk_tbl_actividad_has_tbl_trabajo_tbl_trabajo1_idx` (`id_trabajo_fk` ASC),
  INDEX `fk_tbl_actividad_has_tbl_trabajo_tbl_actividad1_idx` (`id_actividad_fk` ASC),
  CONSTRAINT `fk_tbl_actividad_has_tbl_trabajo_tbl_actividad1`
    FOREIGN KEY (`id_actividad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_actividad` (`id_actividad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_actividad_has_tbl_trabajo_tbl_trabajo1`
    FOREIGN KEY (`id_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_trabajo` (`id_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_espacio_congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_espacio_congreso` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_espacio_congreso` (
  `id_espacio_fk` INT NOT NULL,
  `id_congreso_fk` INT NOT NULL,
  PRIMARY KEY (`id_espacio_fk`, `id_congreso_fk`),
  INDEX `fk_tbl_espacio_has_tbl_congreso_tbl_congreso1_idx` (`id_congreso_fk` ASC),
  INDEX `fk_tbl_espacio_has_tbl_congreso_tbl_espacio1_idx` (`id_espacio_fk` ASC),
  CONSTRAINT `fk_tbl_espacio_has_tbl_congreso_tbl_espacio1`
    FOREIGN KEY (`id_espacio_fk`)
    REFERENCES `dbCongresoceat`.`tbl_espacio` (`id_espacio_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_espacio_has_tbl_congreso_tbl_congreso1`
    FOREIGN KEY (`id_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_persona_institucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_persona_institucion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_persona_institucion` (
  `id_persona_fk` INT NOT NULL,
  `id_institucion_fk` INT NOT NULL,
  `trabaja` TINYINT(1) NULL,
  `cargo` TINYINT(1) NULL,
  PRIMARY KEY (`id_persona_fk`, `id_institucion_fk`),
  INDEX `fk_tbl_persona_has_tbl_institucion_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  INDEX `fk_tbl_persona_has_tbl_institucion_tbl_persona1_idx` (`id_persona_fk` ASC),
  CONSTRAINT `fk_tbl_persona_has_tbl_institucion_tbl_persona1`
    FOREIGN KEY (`id_persona_fk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_persona_has_tbl_institucion_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tour_institucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tour_institucion` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tour_institucion` (
  `id_tour_fk` INT NOT NULL,
  `id_institucion_fk` INT NOT NULL,
  PRIMARY KEY (`id_tour_fk`, `id_institucion_fk`),
  INDEX `fk_tbl_tour_has_tbl_institucion_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  INDEX `fk_tbl_tour_has_tbl_institucion_tbl_tour1_idx` (`id_tour_fk` ASC),
  CONSTRAINT `fk_tbl_tour_has_tbl_institucion_tbl_tour1`
    FOREIGN KEY (`id_tour_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tour` (`id_tour_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_tour_has_tbl_institucion_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_institucion_facultad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_institucion_facultad` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_institucion_facultad` (
  `id_institucion_fk` INT NOT NULL,
  `id_facultad_fk` INT NOT NULL,
  `id_carrera_fk` INT NOT NULL,
  PRIMARY KEY (`id_institucion_fk`, `id_facultad_fk`),
  INDEX `fk_tbl_institucion_has_tbl_facultad_tbl_facultad1_idx` (`id_facultad_fk` ASC),
  INDEX `fk_tbl_institucion_has_tbl_facultad_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  INDEX `fk_tbl_institucion_facultad_tbl_carrera1_idx` (`id_carrera_fk` ASC),
  CONSTRAINT `fk_tbl_institucion_has_tbl_facultad_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_institucion_has_tbl_facultad_tbl_facultad1`
    FOREIGN KEY (`id_facultad_fk`)
    REFERENCES `dbCongresoceat`.`tbl_facultad` (`id_facultad_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_institucion_facultad_tbl_carrera1`
    FOREIGN KEY (`id_carrera_fk`)
    REFERENCES `dbCongresoceat`.`tbl_carrera` (`id_carrera_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_institucion_carrera`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_institucion_carrera` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_institucion_carrera` (
  `id_institucion_fk` INT NOT NULL,
  `id_carrera_fk` INT NOT NULL,
  PRIMARY KEY (`id_institucion_fk`, `id_carrera_fk`),
  INDEX `fk_tbl_institucion_has_tbl_carrera_tbl_carrera1_idx` (`id_carrera_fk` ASC),
  INDEX `fk_tbl_institucion_has_tbl_carrera_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  CONSTRAINT `fk_tbl_institucion_has_tbl_carrera_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_institucion_has_tbl_carrera_tbl_carrera1`
    FOREIGN KEY (`id_carrera_fk`)
    REFERENCES `dbCongresoceat`.`tbl_carrera` (`id_carrera_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_pais_idioma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_pais_idioma` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_pais_idioma` (
  `id_pais_fk` VARCHAR(2) NOT NULL,
  `id_idioma_fk` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_pais_fk`, `id_idioma_fk`),
  INDEX `fk_tbl_pais_has_tbl_idioma_tbl_idioma1_idx` (`id_idioma_fk` ASC),
  INDEX `fk_tbl_pais_has_tbl_idioma_tbl_pais1_idx` (`id_pais_fk` ASC),
  CONSTRAINT `fk_tbl_pais_has_tbl_idioma_tbl_pais1`
    FOREIGN KEY (`id_pais_fk`)
    REFERENCES `dbCongresoceat`.`tbl_pais` (`id_pais_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_pais_has_tbl_idioma_tbl_idioma1`
    FOREIGN KEY (`id_idioma_fk`)
    REFERENCES `dbCongresoceat`.`tbl_idioma` (`id_idioma_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_organizadores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_organizadores` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_organizadores` (
  `id_congreso_fk` INT NOT NULL,
  `id_institucion_fk` INT NOT NULL,
  INDEX `fk_tbl_organizadores_tbl_congreso1_idx` (`id_congreso_fk` ASC),
  INDEX `fk_tbl_organizadores_tbl_institucion1_idx` (`id_institucion_fk` ASC),
  CONSTRAINT `fk_tbl_organizadores_tbl_congreso1`
    FOREIGN KEY (`id_congreso_fk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_organizadores_tbl_institucion1`
    FOREIGN KEY (`id_institucion_fk`)
    REFERENCES `dbCongresoceat`.`tbl_institucion` (`id_institucion_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_certificados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_certificados` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_certificados` (
  `id_certificado_pk` INT NOT NULL AUTO_INCREMENT,
  `nombre_certificado` VARCHAR(250) NOT NULL,
  `encabezado_certificado` MEDIUMTEXT NOT NULL,
  `motivo_certificado` MEDIUMTEXT NOT NULL,
  `pie_certificado` MEDIUMTEXT NOT NULL,
  `url_arte` MEDIUMTEXT NULL COMMENT 'En esta tabla se guardan los certificados y esta relacionada con la tabla tbl_personas_firma_certificado',
  `certificado_especial` TINYINT(1) NULL,
  `nombre_persona` VARCHAR(250) NULL,
  PRIMARY KEY (`id_certificado_pk`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_usuario_firma_certificado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_usuario_firma_certificado` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_usuario_firma_certificado` (
  `id_certificado_pk` INT NOT NULL,
  `id_persona_pk` INT NOT NULL,
  `url_firma` MEDIUMTEXT NOT NULL COMMENT 'Tabla en la que se almacenan las personan que firman un certificado con su respectiva dirección de la firma digital.',
  PRIMARY KEY (`id_certificado_pk`, `id_persona_pk`),
  INDEX `fk_tbl_usuario_firma_certificado_tbl_certificados1_idx` (`id_certificado_pk` ASC),
  INDEX `fk_tbl_usuario_firma_certificado_tbl_persona1_idx` (`id_persona_pk` ASC),
  CONSTRAINT `fk_tbl_usuario_firma_certificado_tbl_certificados1`
    FOREIGN KEY (`id_certificado_pk`)
    REFERENCES `dbCongresoceat`.`tbl_certificados` (`id_certificado_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_firma_certificado_tbl_persona1`
    FOREIGN KEY (`id_persona_pk`)
    REFERENCES `dbCongresoceat`.`tbl_persona` (`id_persona_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_mensaje`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_mensaje` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_mensaje` (
  `id_mensaje` INT NOT NULL,
  `asunto` VARCHAR(45) NULL,
  `contenido_mensaje` TEXT NULL,
  `fecha` DATE NULL,
  `hora` TIME NULL,
  `id_usuario_fk` INT NOT NULL,
  PRIMARY KEY (`id_mensaje`),
  INDEX `fk_tbl_publicacion_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_publicacion_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_respuesta_mensaje`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_respuesta_mensaje` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_respuesta_mensaje` (
  `id_respuesta_mensaje` INT NOT NULL,
  `contenido_respuesta_mensaje` TEXT NULL,
  `fecha` DATE NULL,
  `hora` TIME NULL,
  `id_mensaje_fk` INT NOT NULL,
  `id_usuario_fk` INT NOT NULL,
  PRIMARY KEY (`id_respuesta_mensaje`),
  INDEX `fk_tbl_respuesta_publicacion_tbl_publicacion1_idx` (`id_mensaje_fk` ASC),
  INDEX `fk_tbl_respuesta_publicacion_tbl_usuario1_idx` (`id_usuario_fk` ASC),
  CONSTRAINT `fk_tbl_respuesta_publicacion_tbl_publicacion1`
    FOREIGN KEY (`id_mensaje_fk`)
    REFERENCES `dbCongresoceat`.`tbl_mensaje` (`id_mensaje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_respuesta_publicacion_tbl_usuario1`
    FOREIGN KEY (`id_usuario_fk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_tipo_solicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_tipo_solicitud` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_tipo_solicitud` (
  `id_tipo_solicitud` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_solicitud` VARCHAR(45) NOT NULL,
  `creado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_creacion` DATE NULL,
  `modificado_por` INT NULL COMMENT 'En este campo se almacenará el id del usuario que efectuará la creación o modificación respectiva a est tabla. Nótese que estos campos no están relacionados como llave foránea a ninguna tabla, pero se establecerá la relación a manera de referencia.',
  `fecha_modificacion` DATE NULL,
  PRIMARY KEY (`id_tipo_solicitud`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_solicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_solicitud` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_solicitud` (
  `id_solicitud` INT NOT NULL AUTO_INCREMENT,
  `id_usuario_pk` INT NOT NULL,
  `id_tipo_solicitud` INT NOT NULL,
  `id_congreso_pk` INT NOT NULL,
  `motivo_solicitud` VARCHAR(100) NULL,
  `status` TINYINT(1) NULL,
  `fecha_solicitud` DATE NULL,
  `fecha_resolucion` DATE NULL,
  PRIMARY KEY (`id_solicitud`, `id_usuario_pk`, `id_tipo_solicitud`, `id_congreso_pk`),
  UNIQUE INDEX `id_solicitud_UNIQUE` (`id_solicitud` ASC),
  INDEX `fk_tbl_solicitud_tbl_usuario1_idx` (`id_usuario_pk` ASC),
  INDEX `fk_tbl_solicitud_tbl_tipo_solicitud1_idx` (`id_tipo_solicitud` ASC),
  INDEX `fk_tbl_solicitud_tbl_congreso1_idx` (`id_congreso_pk` ASC),
  CONSTRAINT `fk_tbl_solicitud_tbl_usuario1`
    FOREIGN KEY (`id_usuario_pk`)
    REFERENCES `dbCongresoceat`.`tbl_usuario` (`id_usuario_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_solicitud_tbl_tipo_solicitud1`
    FOREIGN KEY (`id_tipo_solicitud`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_solicitud` (`id_tipo_solicitud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_solicitud_tbl_congreso1`
    FOREIGN KEY (`id_congreso_pk`)
    REFERENCES `dbCongresoceat`.`tbl_congreso` (`id_congreso_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_revisiones_trabajo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_revisiones_trabajo` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_revisiones_trabajo` (
  `id_revisiones_trabajo_pk` INT NOT NULL AUTO_INCREMENT,
  `id_asignacion_a_revisor_fk` INT NOT NULL,
  `descargo_archivo` TINYINT(1) NULL,
  `lleno_formulario` TINYINT(1) NULL,
  `fecha_reviso` DATE NULL,
  `id_tipo_dictamen_fk` INT NOT NULL,
  `observaciones` MEDIUMTEXT NULL,
  PRIMARY KEY (`id_revisiones_trabajo_pk`, `id_asignacion_a_revisor_fk`, `id_tipo_dictamen_fk`),
  INDEX `id_asignacion_a_revisor_fk_idx` (`id_asignacion_a_revisor_fk` ASC),
  INDEX `id_tipo_dictamen_pk_idx` (`id_tipo_dictamen_fk` ASC),
  CONSTRAINT `id_asignacion_a_revisor_fk`
    FOREIGN KEY (`id_asignacion_a_revisor_fk`)
    REFERENCES `dbCongresoceat`.`tbl_asignacion_a_revisor` (`id_asignacion_a_revisor_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_tipo_dictamen_pk`
    FOREIGN KEY (`id_tipo_dictamen_fk`)
    REFERENCES `dbCongresoceat`.`tbl_tipo_dictamen` (`id_tipo_dictamen_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbCongresoceat`.`tbl_respuestas_revisiones_trabajos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbCongresoceat`.`tbl_respuestas_revisiones_trabajos` ;

CREATE TABLE IF NOT EXISTS `dbCongresoceat`.`tbl_respuestas_revisiones_trabajos` (
  `id_revisiones_trabajo_fk` INT NOT NULL,
  `id_respuesta_cualitativa_fk` INT NOT NULL,
  `id_respuesta_cuantitativa_fk` INT NOT NULL,
  PRIMARY KEY (`id_revisiones_trabajo_fk`, `id_respuesta_cualitativa_fk`, `id_respuesta_cuantitativa_fk`),
  INDEX `id_respuesta_cualitativa_fk_idx` (`id_respuesta_cualitativa_fk` ASC),
  INDEX `id_respuesta_cuantitativa_fk_idx` (`id_respuesta_cuantitativa_fk` ASC),
  CONSTRAINT `id_revisiones_trabajo_fk`
    FOREIGN KEY (`id_revisiones_trabajo_fk`)
    REFERENCES `dbCongresoceat`.`tbl_revisiones_trabajo` (`id_revisiones_trabajo_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_respuesta_cualitativa_fk`
    FOREIGN KEY (`id_respuesta_cualitativa_fk`)
    REFERENCES `dbCongresoceat`.`tbl_respuesta_cualitativa` (`id_respuesta_cualitativa_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_respuesta_cuantitativa_fk`
    FOREIGN KEY (`id_respuesta_cuantitativa_fk`)
    REFERENCES `dbCongresoceat`.`tbl_respuesta_cuantitativa` (`id_respuesta_cuantitativa_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
